# Managed by Ansible
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    listen 80;
    listen [::]:80;
{% if env_type == "prod" %}
    server_name new.aromo.ru; # www.aromo.ru;
    access_log /var/log/nginx/new.aromo.ru-access.log combined_ext;
    error_log  /var/log/nginx/new.aromo.ru-error.log;
{% else %}
    server_name {{ env_domain_prefix }}aromo.ru;
    access_log /var/log/nginx/scentbook-branches-front-access.log combined_ext;
    error_log  /var/log/nginx/scentbook-branches-front-error.log;

    auth_basic "Restricted Content";
    auth_basic_user_file aromodev.passwd;
    allow 172.31.47.201; # localhost for sockets.
    satisfy any;
{% endif %}

    root {{ env_base_dir }}/current/static;

    location / {
        try_files $uri @app;
    }
    location @app {
        proxy_pass http://unix:/run/nuxt/{{ env_name }}.sock;
    }
    location /_nuxt/ {
        alias {{ env_base_dir }}/current/.nuxt/dist/client/;
    }
    location /fonts/ {
        root {{ env_base_dir }}/current/assets;
    }
    #location ~* \.(html?|jpe?g|gif|png|webp|ico|css|zip|t?gz|rar|bz2|iso|doc|xls|exe|pdf|ppt|txt|tar|midi?|wav|ogg|bmp|rtf|js|xml|ya?ml|swf|mov|xpi|wsdl|woff2?|eot|ttf|svg|csv|otf)$ {
    #    root /srv/scentbook/stage/front/current/static;
    #    #expires 365d;
    #}
    #location @app {
    #    include fastcgi.conf;
    #    fastcgi_pass unix:/run/php/php7.4-fpm-www.sock;
    #    fastcgi_param SCRIPT_FILENAME $realpath_root/bitrix/urlrewrite.php;
    #}
    #location ~* \.(html?|jpe?g|gif|png|webp|ico|css|zip|t?gz|rar|bz2|iso|doc|xls|exe|pdf|ppt|txt|tar|midi?|wav|ogg|bmp|rtf|js|xml|ya?ml|swf|mov|xpi|wsdl|woff2?|eot|ttf|svg|csv|otf)$ {
    #    expires 365d;
    #}
    # Don't use urlrewrite.php to be able to set custom HTTP response code. Put after "/$" and static rules.
    location ~* ^/api/ {
        set $cors_origin '*';
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'POST, GET, OPTIONS, PUT, DELETE, PATCH' always;
            add_header Access-Control-Max-Age 1728000;    # 20 days
            add_header Access-Control-Allow-Headers 'Authorization';
            return 204;
        }
        add_header Access-Control-Allow-Origin $cors_origin always;
        include fastcgi.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm-www.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root/api/index.php;
    }

    if ($host ~ ^www\.(?<canon_host>.+)$) {
        return 301 https://$canon_host$request_uri;
    }
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
{% if env_type == "dev-user" %}
    ssl_certificate /etc/nginx/ssl/wildcard-san.crt.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key.pem;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
{% else %}
    ssl_certificate /etc/letsencrypt/live/{{ env_domain_prefix }}aromo.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ env_domain_prefix }}aromo.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ env_domain_prefix }}aromo.ru/chain.pem;
{% endif %}
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    listen 80;
    listen [::]:80;
{% if env_type == "prod" %}
    server_name new.scentbook.com; # www.scentbook.com;
    access_log /var/log/nginx/new.scentbook.com-access.log combined_ext;
    error_log  /var/log/nginx/new.scentbook.com-error.log;
{% else %}
    server_name {{ env_domain_prefix }}scentbook.com;
    access_log /var/log/nginx/scentbook-branches-front-access.log combined_ext;
    error_log  /var/log/nginx/scentbook-branches-front-error.log;

    auth_basic "Restricted Content";
    auth_basic_user_file aromodev.passwd;
    allow 172.31.47.201; # localhost for sockets.
    satisfy any;
{% endif %}

    root {{ env_base_dir }}/current/static;

    location / {
        try_files $uri @app;
    }
    location @app {
        proxy_pass http://unix:/run/nuxt/{{ env_name }}.sock;
    }
    location /_nuxt/ {
        alias {{ env_base_dir }}/current/.nuxt/dist/client/;
    }
    location /fonts/ {
        root {{ env_base_dir }}/current/assets;
    }
    #location ~* \.(html?|jpe?g|gif|png|webp|ico|css|zip|t?gz|rar|bz2|iso|doc|xls|exe|pdf|ppt|txt|tar|midi?|wav|ogg|bmp|rtf|js|xml|ya?ml|swf|mov|xpi|wsdl|woff2?|eot|ttf|svg|csv|otf)$ {
    #    root /srv/scentbook/stage/front/current/static;
    #    #expires 365d;
    #}
    #location @app {
    #    include fastcgi.conf;
    #    fastcgi_pass unix:/run/php/php7.4-fpm-www.sock;
    #    fastcgi_param SCRIPT_FILENAME $realpath_root/bitrix/urlrewrite.php;
    #}
    #location ~* \.(html?|jpe?g|gif|png|webp|ico|css|zip|t?gz|rar|bz2|iso|doc|xls|exe|pdf|ppt|txt|tar|midi?|wav|ogg|bmp|rtf|js|xml|ya?ml|swf|mov|xpi|wsdl|woff2?|eot|ttf|svg|csv|otf)$ {
    #    expires 365d;
    #}
    # Don't use urlrewrite.php to be able to set custom HTTP response code. Put after "/$" and static rules.
    location ~* ^/api/ {
        set $cors_origin '*';
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'POST, GET, OPTIONS, PUT, DELETE, PATCH' always;
            add_header Access-Control-Max-Age 1728000;    # 20 days
            add_header Access-Control-Allow-Headers 'Authorization';
            return 204;
        }
        add_header Access-Control-Allow-Origin $cors_origin always;
        include fastcgi.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm-www.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root/api/index.php;
    }

    if ($host ~ ^www\.(?<canon_host>.+)$) {
        return 301 https://$canon_host$request_uri;
    }
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
{% if env_type == "dev-user" %}
    ssl_certificate /etc/nginx/ssl/wildcard-san.crt.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key.pem;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
{% else %}
    ssl_certificate /etc/letsencrypt/live/{{ env_domain_prefix }}aromo.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ env_domain_prefix }}aromo.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ env_domain_prefix }}aromo.ru/chain.pem;
{% endif %}
}
